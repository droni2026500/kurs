version: '2.1'

services:

  web-service:
    container_name: web-service
    build:
      context: ./client
      dockerfile: Dockerfile-local
    volumes:
      - './client:/usr/src/app'
      - '/usr/src/app/node_modules'
    ports:
      - '9000:9000' # expose ports - HOST:CONTAINER
    environment:
      - CHOKIDAR_USEPOLLING=true 
      - NODE_ENV=development
      - REACT_APP_USERS_SERVICE_URL=${REACT_APP_USERS_SERVICE_URL}
      - REACT_APP_EVAL_SERVICE_URL=${REACT_APP_EVAL_SERVICE_URL}
      - REACT_APP_API_GATEWAY_URL=${REACT_APP_API_GATEWAY_URL}
    depends_on:
      users-service:
        condition: service_started
    links:
      - users-service

  users-db:
    container_name: users-db
    build:
      context: ./server/users/db_users
    ports:
      - 5435:5432  # expose ports - HOST:CONTAINER
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: exit 0

  users-service:
    container_name: users-service
    build:
      context: ./server/users
      dockerfile: Dockerfile-local
    volumes:
      - './server/users:/usr/src/app'
    ports:
      - 5001:5000 # expose ports - HOST:CONTAINER
    environment:
      - APP_SETTINGS=project.config.DevelopmentConfig
      - DATABASE_URL=postgres://postgres:postgres@users-db:5432/users
      - SECRET_KEY=my_precious
    depends_on:
      users-db:
        condition: service_healthy
    links:
      - users-db

  nginx:
    container_name: nginx
    build: ./nginx/
    restart: always
    ports:
      - 80:80
    depends_on:
      users-service:
        condition: service_started
      web-service:
        condition: service_started
    links:
      - users-service
      - web-service
